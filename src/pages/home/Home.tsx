import React, { useEffect } from "react";
import qs from "qs";
import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";
import { RootState, useAppDispatch } from "../../redux/store";

import { setFilters } from "../../redux/filter/slice";
import { fetchPizzas } from "../../redux/pizza/asyncActions";
import { setStatus } from "../../redux/pizza/slice";

import { Card, Categories, Sort, Pagination } from "./../../components/index";

import { sortArr } from "./../../components/sort/Sort";
import { Pizza } from "./../../redux/pizza/types";

import "./home.scss";

const Home: React.FC = () => {
  const { categoryId, sort, page } = useSelector(
    (state: RootState) => state.filter
  );
  const dispatch = useAppDispatch();

  const search = useSelector((state: RootState) => state.search.value);
  const { items, status } = useSelector((state: RootState) => state.pizza);
  const navigate = useNavigate();

  const isSearch = React.useRef(false); // –ø–æ–∏—Å–∫–∞ –ø–æ URl –µ—â–µ –Ω–µ –±—ã–ª–æ
  const isMounted = React.useRef(false); // –ø–µ—Ä–≤–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞ –µ—â–µ –Ω–µ –±—ã–ª–æ

  async function getPizzas() {
    const category = categoryId > 0 ? `&category=${categoryId}` : "";

    dispatch(
      fetchPizzas({
        category,
        page,
        sort: sort.sortProperty,
      })
    );

    window.scrollTo(0, 0);
  }

  // –ï—Å–ª–∏ –±—ã–ª –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º URL-–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ redux
  useEffect(() => {
    if (window.location.search) {
      const params = qs.parse(window.location.search.substring(1));

      const sort = sortArr.find(
        (obj) => obj.sortProperty === params.sortProperty
      );

      dispatch(
        setFilters({
          categoryId: Number(params.categoryId),
          page: Number(params.page),
          sort: sort || sortArr[0],
        })
      );

      isSearch.current = true;
    }
  }, []);

  // –ï—Å–ª–∏ URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–µ—Ç, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –æ—Ç–æ–±—Ä–∞–∂–∞—é—â—É—é –∫–∞—Ç–∞–ª–æ–≥ –ø–∏—Ü—Ü —Å –±—ç–∫–∞.
  // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –∏–∑–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞ false
  // –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ—Å—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  useEffect(() => {
    if (!isSearch.current) {
      getPizzas();
    }

    isSearch.current = false;
  }, [categoryId, sort.sortProperty, page, search]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ –ø–µ—Ä–≤—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥, –µ—Å–ª–∏ –Ω–µ—Ç - –º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞ true, –µ—Å–ª–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –±—ã–ª - –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ navigate
  React.useEffect(() => {
    if (isMounted.current) {
      const queryString = qs.stringify({
        sortProperty: sort.sortProperty,
        categoryId,
        page,
      });

      navigate(`?${queryString}`);
    }

    isMounted.current = true;
  }, [categoryId, sort.sortProperty, page]);

  function renderItems() {
    const filteredItems = items.filter((pizza: Pizza) =>
      pizza.title.toLowerCase().includes(search.toLowerCase())
    );

    if (!filteredItems.length) {
      setStatus("error");
    }

    return (status === "loading" ? [...Array(8)] : filteredItems).map(
      (item: any) => <Card key={item && item.id} {...item} isLoading={status} />
    );
  }

  return (
    <div className="container">
      <div className="home__top">
        <Categories value={categoryId} />
        <Sort value={sort} />
      </div>
      {status === "error" ? (
        <div className="home__error-info">
          <h2>
            –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã <span>üòï</span>
          </h2>
          <p>
            –í–µ—Ä–æ—è—Ç–Ω–µ–π –≤—Å–µ–≥–æ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞
            <br />
            –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∏—Ç–µ
          </p>
        </div>
      ) : (
        <div>
          <h2 className="home__title">–í—Å–µ –ø–∏—Ü—Ü—ã</h2>
          <div className="home__items">{renderItems()}</div>
          <Pagination />
        </div>
      )}
    </div>
  );
};

export default Home;
